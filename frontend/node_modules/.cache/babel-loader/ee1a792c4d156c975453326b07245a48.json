{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } from \"./userTypes\";\nimport { access, refresh } from \"../tokens\";\nimport Cookies from \"js-cookie\";\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    const ws = new WebSocket(\"ws://localhost:8000/au\");\n    ws.addEventListener(\"open\", () => {\n      console.log(\"asba\");\n    }); // axios\n    //   .get(\"auth/user/\", access)\n    //   .then((response) => {\n    //     // response.data is the users\n    //     const users = response.data.username;\n    //     dispatch(fetchUsersSuccess(users));\n    //   })\n    //   .catch((error) => {\n    //     if (Cookies.get(\"refresh\")) {\n    //       axios.post(\"auth/token/refresh/\", refresh).then((res) => {\n    //         Cookies.set(\"access\", res.data.access);\n    //         document.location.reload();\n    //       });\n    //     } else {\n    //       Cookies.remove(\"access\");\n    //       Cookies.remove(\"refresh\");\n    //     }\n    //   });\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/develop/back end/django/my-project/frontend/src/redux/user/userActions.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","access","refresh","Cookies","fetchUsers","dispatch","fetchUsersRequest","ws","WebSocket","addEventListener","console","log","type","fetchUsersSuccess","users","payload","fetchUsersFailure","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,aAJP;AAKA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,UAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,wBAAd,CAAX;AACAD,IAAAA,EAAE,CAACE,gBAAH,CAAoB,MAApB,EAA4B,MAAM;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAFD,EAHmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAML,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLM,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMe,iBAAiB,GAAIC,KAAD,IAAW;AAC1C,SAAO;AACLF,IAAAA,IAAI,EAAEb,mBADD;AAELgB,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AAC1C,SAAO;AACLL,IAAAA,IAAI,EAAEZ,mBADD;AAELe,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE,\r\n} from \"./userTypes\";\r\nimport { access, refresh } from \"../tokens\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const fetchUsers = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUsersRequest());\r\n    const ws = new WebSocket(\"ws://localhost:8000/au\");\r\n    ws.addEventListener(\"open\", () => {\r\n      console.log(\"asba\");\r\n    });\r\n    // axios\r\n    //   .get(\"auth/user/\", access)\r\n    //   .then((response) => {\r\n    //     // response.data is the users\r\n    //     const users = response.data.username;\r\n    //     dispatch(fetchUsersSuccess(users));\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     if (Cookies.get(\"refresh\")) {\r\n    //       axios.post(\"auth/token/refresh/\", refresh).then((res) => {\r\n    //         Cookies.set(\"access\", res.data.access);\r\n    //         document.location.reload();\r\n    //       });\r\n    //     } else {\r\n    //       Cookies.remove(\"access\");\r\n    //       Cookies.remove(\"refresh\");\r\n    //     }\r\n    //   });\r\n  };\r\n};\r\n\r\nexport const fetchUsersRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUsersSuccess = (users) => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    payload: users,\r\n  };\r\n};\r\n\r\nexport const fetchUsersFailure = (error) => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
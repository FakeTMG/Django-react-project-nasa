{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mega-PC\\\\Desktop\\\\my-project\\\\frontend\\\\src\\\\components\\\\UserInfo.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = OriginalComponent => {\n  class NewComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        username: \"\"\n      };\n    }\n\n    getUserInfo() {\n      const config = {\n        headers: {\n          Authorization: \"Token \" + localStorage.getItem(\"token\")\n        }\n      };\n      axios.get(\"api/auth/user/\", config).then(res => {\n        this.setState({\n          username: res.data.username\n        });\n      }).catch(err => {\n        this.setState({\n          username: \"\"\n        });\n        localStorage.clear();\n      }).bi;\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {\n        info: this.getUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n\n  return NewComponent;\n};\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/my-project/frontend/src/components/UserInfo.js"],"names":["React","Component","axios","UserInfo","OriginalComponent","NewComponent","constructor","props","state","username","getUserInfo","config","headers","Authorization","localStorage","getItem","get","then","res","setState","data","catch","err","clear","bi","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,iBAAD,IAAuB;AACtC,QAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AAEA,WAAKC,KAAL,GAAa;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AACD;;AACDC,IAAAA,WAAW,GAAG;AACZ,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADnB;AADI,OAAf;AAKAb,MAAAA,KAAK,CACFc,GADH,CACO,gBADP,EACyBL,MADzB,EAEGM,IAFH,CAESC,GAAD,IAAS;AACb,aAAKC,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAES,GAAG,CAACE,IAAJ,CAASX;AAArB,SAAd;AACD,OAJH,EAKGY,KALH,CAKUC,GAAD,IAAS;AACd,aAAKH,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACAK,QAAAA,YAAY,CAACS,KAAb;AACD,OARH,EAQKC,EARL;AASD;;AACDC,IAAAA,MAAM,GAAG;AACP,0BAAO,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAE,KAAKf;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAxBkC;;AA2BrC,SAAOL,YAAP;AACD,CA7BD;;KAAMF,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UserInfo = (OriginalComponent) => {\r\n  class NewComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { username: \"\" };\r\n    }\r\n    getUserInfo() {\r\n      const config = {\r\n        headers: {\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      };\r\n      axios\r\n        .get(\"api/auth/user/\", config)\r\n        .then((res) => {\r\n          this.setState({ username: res.data.username });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ username: \"\" });\r\n          localStorage.clear();\r\n        }).bi;\r\n    }\r\n    render() {\r\n      return <OriginalComponent info={this.getUserInfo} />;\r\n    }\r\n  }\r\n\r\n  return NewComponent;\r\n};\r\n\r\nexport default UserInfo;\r\n"]},"metadata":{},"sourceType":"module"}
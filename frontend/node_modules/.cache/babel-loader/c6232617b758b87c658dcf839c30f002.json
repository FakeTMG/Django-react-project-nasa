{"ast":null,"code":"import { CONTACTS_LOADING, CONTACTS_LOAD_SUCCESS, CONTACTS_LOAD_ERROR, LOGOUT_USER, ADD_CONTACT_LOAD, ADD_CONTACT_SUCCESS, ADD_CONTACT_ERROR, CLEAR_ADD_CONTACT, SEARCH_CONTACTS, DELETE_CONTACT_SUCCESS, DELETE_CONTACT_LOADING, ADD_REMOVE_STAR_SUCCESS } from \"../../constants/actionTypes\";\nimport contactsInitialState from \"../intialstates/contactsInitialState\";\n\nconst contacts = (state, {\n  payload,\n  type\n}) => {\n  switch (type) {\n    case CONTACTS_LOADING:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: true\n          }\n        };\n      }\n\n    case CONTACTS_LOAD_SUCCESS:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: false,\n            data: payload\n          }\n        };\n      }\n\n    case CONTACTS_LOAD_ERROR:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: false,\n            error: payload\n          }\n        };\n      }\n\n    case CLEAR_ADD_CONTACT:\n      {\n        return { ...state,\n          addContact: { ...state.addContact,\n            error: null,\n            loading: false,\n            data: null\n          }\n        };\n      }\n\n    case LOGOUT_USER:\n      {\n        return { ...state,\n          contactsInitialState\n        };\n      }\n\n    case ADD_CONTACT_LOAD:\n      {\n        return { ...state,\n          addContact: { ...state.addContact,\n            error: null,\n            loading: true\n          }\n        };\n      }\n\n    case ADD_CONTACT_ERROR:\n      {\n        return { ...state,\n          addContact: { ...state.addContact,\n            loading: false\n          }\n        };\n      }\n\n    case ADD_CONTACT_SUCCESS:\n      {\n        return { ...state,\n          addContact: { ...state.addContact,\n            loading: false,\n            data: payload\n          },\n          contacts: { ...state.contacts,\n            loading: false,\n            data: [payload, ...state.contacts.data]\n          }\n        };\n      }\n\n    case DELETE_CONTACT_LOADING:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: false,\n            data: state.contacts.data.map(item => {\n              if (item.id === payload) {\n                return { ...item,\n                  deleting: true\n                };\n              }\n\n              return item;\n            })\n          }\n        };\n      }\n\n    case ADD_REMOVE_STAR_SUCCESS:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            data: state.contacts.data.map(item => {\n              if (item.id === payload.id) {\n                return payload;\n              }\n\n              return item;\n            })\n          }\n        };\n      }\n\n    case DELETE_CONTACT_SUCCESS:\n      {\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: false,\n            data: state.contacts.data.filter(item => item.id !== payload)\n          }\n        };\n      }\n\n    case SEARCH_CONTACTS:\n      {\n        const searchValue = payload === null || payload === void 0 ? void 0 : payload.toLowerCase();\n        return { ...state,\n          contacts: { ...state.contacts,\n            loading: false,\n            isSearchActive: !!payload.length > 0 || false,\n            foundContacts: state.contacts.data.filter(item => {\n              try {\n                return item.first_name.toLowerCase().search(searchValue) !== -1 || item.last_name.toLowerCase().search(searchValue) !== -1 || item.phone_number.toLowerCase().search(searchValue) !== -1;\n              } catch (error) {\n                return [];\n              }\n            })\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contacts;","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/my-project/frontend/src/components/context/reducers/contacts.js"],"names":["CONTACTS_LOADING","CONTACTS_LOAD_SUCCESS","CONTACTS_LOAD_ERROR","LOGOUT_USER","ADD_CONTACT_LOAD","ADD_CONTACT_SUCCESS","ADD_CONTACT_ERROR","CLEAR_ADD_CONTACT","SEARCH_CONTACTS","DELETE_CONTACT_SUCCESS","DELETE_CONTACT_LOADING","ADD_REMOVE_STAR_SUCCESS","contactsInitialState","contacts","state","payload","type","loading","data","error","addContact","map","item","id","deleting","filter","searchValue","toLowerCase","isSearchActive","length","foundContacts","first_name","search","last_name","phone_number"],"mappings":"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","sourcesContent":["import {\n  CONTACTS_LOADING,\n  CONTACTS_LOAD_SUCCESS,\n  CONTACTS_LOAD_ERROR,\n  LOGOUT_USER,\n  ADD_CONTACT_LOAD,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_ERROR,\n  CLEAR_ADD_CONTACT,\n  SEARCH_CONTACTS,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_LOADING,\n  ADD_REMOVE_STAR_SUCCESS,\n} from \"../../constants/actionTypes\";\nimport contactsInitialState from \"../intialstates/contactsInitialState\";\n\nconst contacts = (state, { payload, type }) => {\n  switch (type) {\n    case CONTACTS_LOADING: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: true,\n        },\n      };\n    }\n\n    case CONTACTS_LOAD_SUCCESS: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          data: payload,\n        },\n      };\n    }\n    case CONTACTS_LOAD_ERROR: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          error: payload,\n        },\n      };\n    }\n\n    case CLEAR_ADD_CONTACT: {\n      return {\n        ...state,\n        addContact: {\n          ...state.addContact,\n          error: null,\n          loading: false,\n          data: null,\n        },\n      };\n    }\n\n    case LOGOUT_USER: {\n      return {\n        ...state,\n        contactsInitialState,\n      };\n    }\n\n    case ADD_CONTACT_LOAD: {\n      return {\n        ...state,\n        addContact: {\n          ...state.addContact,\n          error: null,\n          loading: true,\n        },\n      };\n    }\n\n    case ADD_CONTACT_ERROR: {\n      return {\n        ...state,\n        addContact: {\n          ...state.addContact,\n          loading: false,\n        },\n      };\n    }\n\n    case ADD_CONTACT_SUCCESS: {\n      return {\n        ...state,\n        addContact: {\n          ...state.addContact,\n          loading: false,\n          data: payload,\n        },\n\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          data: [payload, ...state.contacts.data],\n        },\n      };\n    }\n\n    case DELETE_CONTACT_LOADING: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          data: state.contacts.data.map((item) => {\n            if (item.id === payload) {\n              return { ...item, deleting: true };\n            }\n            return item;\n          }),\n        },\n      };\n    }\n\n    case ADD_REMOVE_STAR_SUCCESS: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          data: state.contacts.data.map((item) => {\n            if (item.id === payload.id) {\n              return payload;\n            }\n            return item;\n          }),\n        },\n      };\n    }\n\n    case DELETE_CONTACT_SUCCESS: {\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          data: state.contacts.data.filter((item) => item.id !== payload),\n        },\n      };\n    }\n\n    case SEARCH_CONTACTS: {\n      const searchValue = payload?.toLowerCase();\n      return {\n        ...state,\n        contacts: {\n          ...state.contacts,\n          loading: false,\n          isSearchActive: !!payload.length > 0 || false,\n          foundContacts: state.contacts.data.filter((item) => {\n            try {\n              return (\n                item.first_name.toLowerCase().search(searchValue) !== -1 ||\n                item.last_name.toLowerCase().search(searchValue) !== -1 ||\n                item.phone_number.toLowerCase().search(searchValue) !== -1\n              );\n            } catch (error) {\n              return [];\n            }\n          }),\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default contacts;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE } from \"./userTypes\";\nconst access = {\n  headers: {\n    Authorization: \"Bearer \" + localStorage.getItem(\"access\")\n  }\n};\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    axios.get(\"http://127.0.0.1:8000/auth/user/\", access).then(response => {\n      const users = response.data.username;\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      axios.post(\"http://127.0.0.1:8000/auth/refresh/\", localStorage.getItem(\"refresh\")).then(response => {\n        localStorage.setItem(\"access\", response.data.access);\n      });\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/develop/back end/django/my-project/frontend/src/redux/user/userActions.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","access","headers","Authorization","localStorage","getItem","fetchUsers","dispatch","fetchUsersRequest","get","then","response","users","data","username","fetchUsersSuccess","catch","error","post","setItem","fetchUsersFailure","message","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,aAJP;AAMA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB;AADpB;AADI,CAAf;AAMA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,IAAAA,KAAK,CACFY,GADH,CACO,kCADP,EAC2CR,MAD3C,EAEGS,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcC,QAA5B;AACAP,MAAAA,QAAQ,CAACQ,iBAAiB,CAACH,KAAD,CAAlB,CAAR;AACD,KALH,EAMGI,KANH,CAMUC,KAAD,IAAW;AAChBpB,MAAAA,KAAK,CACFqB,IADH,CAEI,qCAFJ,EAGId,YAAY,CAACC,OAAb,CAAqB,SAArB,CAHJ,EAKGK,IALH,CAKSC,QAAD,IAAc;AAClBP,QAAAA,YAAY,CAACe,OAAb,CAAqB,QAArB,EAA+BR,QAAQ,CAACE,IAAT,CAAcZ,MAA7C;AACD,OAPH;AAQAM,MAAAA,QAAQ,CAACa,iBAAiB,CAACH,KAAK,CAACI,OAAP,CAAlB,CAAR;AACD,KAhBH;AAiBD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMb,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLc,IAAAA,IAAI,EAAExB;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMiB,iBAAiB,GAAIH,KAAD,IAAW;AAC1C,SAAO;AACLU,IAAAA,IAAI,EAAEvB,mBADD;AAELwB,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMQ,iBAAiB,GAAIH,KAAD,IAAW;AAC1C,SAAO;AACLK,IAAAA,IAAI,EAAEtB,mBADD;AAELuB,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE,\r\n} from \"./userTypes\";\r\n\r\nconst access = {\r\n  headers: {\r\n    Authorization: \"Bearer \" + localStorage.getItem(\"access\"),\r\n  },\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUsersRequest());\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/auth/user/\", access)\r\n      .then((response) => {\r\n        const users = response.data.username;\r\n        dispatch(fetchUsersSuccess(users));\r\n      })\r\n      .catch((error) => {\r\n        axios\r\n          .post(\r\n            \"http://127.0.0.1:8000/auth/refresh/\",\r\n            localStorage.getItem(\"refresh\")\r\n          )\r\n          .then((response) => {\r\n            localStorage.setItem(\"access\", response.data.access);\r\n          });\r\n        dispatch(fetchUsersFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUsersSuccess = (users) => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    payload: users,\r\n  };\r\n};\r\n\r\nexport const fetchUsersFailure = (error) => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
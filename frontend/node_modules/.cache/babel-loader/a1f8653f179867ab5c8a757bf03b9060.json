{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mega-PC\\\\Desktop\\\\develop\\\\back end\\\\django\\\\my-project\\\\frontend\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction login() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(\"\");\n\n  const refresh = refreshToken => {\n    console.log(\"Refreshing token!\");\n    return new Promise((resolve, reject) => {\n      axios.post(\"http://localhost:5000/refresh\", {\n        token: refreshToken\n      }).then(data => {\n        if (data.data.success === false) {\n          setErr(\"Login again\"); // set message and return.\n\n          resolve(false);\n        } else {\n          const {\n            accessToken\n          } = data.data;\n          Cookies.set(\"access\", accessToken);\n          resolve(accessToken);\n        }\n      });\n    });\n  };\n\n  const requestLogin = async (accessToken, refreshToken) => {\n    console.log(accessToken, refreshToken);\n    return new Promise((resolve, reject) => {\n      axios.post(\"http://localhost:5000/protected\", {}, {\n        headers: {\n          authorization: `Bearer ${accessToken}`\n        }\n      }).then(async data => {\n        if (data.data.success === false) {\n          if (data.data.message === \"User not authenticated\") {\n            setErr(\"Login again\"); // set err message to login again.\n          } else if (data.data.message === \"Access token expired\") {\n            const accessToken = await refresh(refreshToken);\n            return await requestLogin(accessToken, refreshToken);\n          }\n\n          resolve(false);\n        } else {\n          // protected route has been accessed, response can be used.\n          setErr(\"Protected route accessed!\");\n          resolve(true);\n        }\n      });\n    });\n  };\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n    console.log(user);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000/login\", {\n      user\n    }).then(data => {\n      const {\n        accessToken,\n        refreshToken\n      } = data.data;\n      Cookies.set(\"access\", accessToken);\n      Cookies.set(\"refresh\", refreshToken);\n    });\n  };\n\n  const hasAccess = async (accessToken, refreshToken) => {\n    if (!refreshToken) return null;\n\n    if (accessToken === undefined) {\n      // generate new accessToken\n      accessToken = await refresh(refreshToken);\n      return accessToken;\n    }\n\n    return accessToken;\n  };\n\n  const protect = async e => {\n    let accessToken = Cookies.get(\"access\");\n    let refreshToken = Cookies.get(\"refresh\");\n    accessToken = await hasAccess(accessToken, refreshToken);\n\n    if (!accessToken) {// Set message saying login again.\n    } else {\n      await requestLogin(accessToken, refreshToken);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), err, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: protect,\n      children: \"Access Protected Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(login, \"dK+LwNCIuue2769SnVvCoA6JkEk=\");\n\nexport default login;","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/develop/back end/django/my-project/frontend/src/components/login.js"],"names":["React","useState","axios","Cookies","login","user","setUser","err","setErr","refresh","refreshToken","console","log","Promise","resolve","reject","post","token","then","data","success","accessToken","set","requestLogin","headers","authorization","message","handleChange","e","target","name","value","handleSubmit","preventDefault","hasAccess","undefined","protect","get"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\n\nfunction login() {\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(\"\");\n\n  const refresh = (refreshToken) => {\n    console.log(\"Refreshing token!\");\n\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\"http://localhost:5000/refresh\", { token: refreshToken })\n        .then((data) => {\n          if (data.data.success === false) {\n            setErr(\"Login again\");\n            // set message and return.\n            resolve(false);\n          } else {\n            const { accessToken } = data.data;\n            Cookies.set(\"access\", accessToken);\n            resolve(accessToken);\n          }\n        });\n    });\n  };\n\n  const requestLogin = async (accessToken, refreshToken) => {\n    console.log(accessToken, refreshToken);\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\n          \"http://localhost:5000/protected\",\n          {},\n          { headers: { authorization: `Bearer ${accessToken}` } }\n        )\n        .then(async (data) => {\n          if (data.data.success === false) {\n            if (data.data.message === \"User not authenticated\") {\n              setErr(\"Login again\");\n              // set err message to login again.\n            } else if (data.data.message === \"Access token expired\") {\n              const accessToken = await refresh(refreshToken);\n              return await requestLogin(accessToken, refreshToken);\n            }\n\n            resolve(false);\n          } else {\n            // protected route has been accessed, response can be used.\n            setErr(\"Protected route accessed!\");\n            resolve(true);\n          }\n        });\n    });\n  };\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n    console.log(user);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios.post(\"http://localhost:5000/login\", { user }).then((data) => {\n      const { accessToken, refreshToken } = data.data;\n\n      Cookies.set(\"access\", accessToken);\n      Cookies.set(\"refresh\", refreshToken);\n    });\n  };\n\n  const hasAccess = async (accessToken, refreshToken) => {\n    if (!refreshToken) return null;\n\n    if (accessToken === undefined) {\n      // generate new accessToken\n      accessToken = await refresh(refreshToken);\n      return accessToken;\n    }\n\n    return accessToken;\n  };\n\n  const protect = async (e) => {\n    let accessToken = Cookies.get(\"access\");\n    let refreshToken = Cookies.get(\"refresh\");\n\n    accessToken = await hasAccess(accessToken, refreshToken);\n\n    if (!accessToken) {\n      // Set message saying login again.\n    } else {\n      await requestLogin(accessToken, refreshToken);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form action=\"\" onChange={handleChange} onSubmit={handleSubmit}>\n        <input name=\"email\" type=\"email\" placeholder=\"Email address\" />\n        <br />\n        <br />\n\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Login\" />\n        <br />\n        <br />\n      </form>\n      {err}\n      <button onClick={protect}>Access Protected Content</button>\n    </div>\n  );\n}\n\nexport default login;"]},"metadata":{},"sourceType":"module"}
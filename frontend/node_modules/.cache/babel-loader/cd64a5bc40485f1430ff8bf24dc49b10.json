{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mega-PC\\\\Desktop\\\\develop\\\\back end\\\\django\\\\my-project\\\\frontend\\\\src\\\\components\\\\Comments.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport axios from \"axios\";\nimport NasaNav from \"./Nav\";\nimport { access } from \"../redux/tokens\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios //Axios to send and receive HTTP requests\n      .get(\"api/comments/\").then(res => {\n        this.setState({\n          CommentsList: res.data\n        });\n      });\n      setTimeout(() => {}, 500);\n    };\n\n    this.renderItems = () => {\n      return this.state.CommentsList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 `,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: item.id,\n            children: [\"Created by : \", item.created_by, /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"12px\"\n              },\n              children: [\" \", item.created_dt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), item.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.created_by === this.props.userData.users ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.editItem(item),\n              className: \"btn btn-secondary mr-2\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.handleDelete(item),\n              className: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.toggle = () => {\n      //add this after modal creation\n      this.setState({\n        modal: !this.state.modal\n      }); //add this after modal creation\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        // if old post to edit and submit\n        axios.put(`api/comments/${item.id}/`, item, access).then(res => this.refreshList());\n        return;\n      } // if new post to submit\n\n\n      axios.post(\"api/comments/\", item, access).then(res => {\n        this.refreshList();\n      });\n    };\n\n    this.handleDelete = item => {\n      if (item.id) {\n        axios.delete(`api/comments/${item.id}/`, access).then(res => this.refreshList());\n      } else {\n        window.location = \"/login\";\n      }\n    };\n\n    this.createItem = () => {\n      if (this.props.userData.users) {\n        const item = {\n          message: \"\"\n        };\n        this.setState({\n          activeItem: item,\n          modal: !this.state.modal\n        });\n      } else {\n        window.location = \"/login\";\n      }\n    };\n\n    this.editItem = item => {\n      if (this.props.userData.users) {\n        this.setState({\n          activeItem: item,\n          modal: !this.state.modal\n        });\n      } else {\n        window.location = \"/login\";\n      }\n    };\n\n    this.state = {\n      modal: false,\n      CommentsList: [],\n      activeItem: {\n        message: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  // -I- Start by visual effects to viewer\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NasaNav, {\n        comment: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-black text-uppercase text-center my-4\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-primary\",\n                children: \"Add Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n          activeItem: this.state.activeItem,\n          toggle: this.toggle,\n          onSave: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps)(Comments);","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/develop/back end/django/my-project/frontend/src/components/Comments.js"],"names":["React","Component","Modal","axios","NasaNav","access","connect","mapStateToProps","state","userData","user","Comments","constructor","props","refreshList","get","then","res","setState","CommentsList","data","setTimeout","renderItems","map","item","id","created_by","fontSize","created_dt","message","users","editItem","handleDelete","toggle","modal","handleSubmit","put","post","delete","window","location","createItem","activeItem","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport axios from \"axios\";\r\nimport NasaNav from \"./Nav\";\r\nimport { access } from \"../redux/tokens\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user,\r\n  };\r\n};\r\n\r\nclass Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      CommentsList: [],\r\n      activeItem: {\r\n        message: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList();\r\n  }\r\n\r\n  \r\n\r\n  refreshList = () => {\r\n    axios //Axios to send and receive HTTP requests\r\n      .get(\"api/comments/\")\r\n      .then((res) => {\r\n        this.setState({ CommentsList: res.data });\r\n      });\r\n        setTimeout(() => {}, 500);\r\n  };\r\n  // Main variable to render items on the screen\r\n  renderItems = () => {\r\n    return this.state.CommentsList.map((item) => (\r\n      <li\r\n        key={item.id}\r\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n      >\r\n        <span className={`todo-title mr-2 `}>\r\n          <h4 id={item.id}>\r\n            Created by : {item.created_by}\r\n            <span style={{ fontSize: \"12px\" }}> {item.created_dt}</span>\r\n          </h4>\r\n          {item.message}\r\n        </span>\r\n        <span>\r\n          {item.created_by === this.props.userData.users ? (\r\n            <div>\r\n              <button\r\n                onClick={() => this.editItem(item)}\r\n                className=\"btn btn-secondary mr-2\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => this.handleDelete(item)}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </span>\r\n      </li>\r\n    ));\r\n  };\r\n  ////add this after modal creation\r\n  toggle = () => {\r\n    //add this after modal creation\r\n    this.setState({ modal: !this.state.modal }); //add this after modal creation\r\n  };\r\n  // Submit an item\r\n  handleSubmit = (item) => {\r\n    this.toggle();\r\n    if (item.id) {\r\n      // if old post to edit and submit\r\n      axios\r\n        .put(`api/comments/${item.id}/`, item, access)\r\n        .then((res) => this.refreshList());\r\n      return;\r\n    }\r\n    // if new post to submit\r\n    axios\r\n      .post(\"api/comments/\", item, access)\r\n      .then((res) => {\r\n        this.refreshList();\r\n      });\r\n  };\r\n\r\n  // Delete item\r\n  handleDelete = (item) => {\r\n    if (item.id) {\r\n      axios\r\n        .delete(`api/comments/${item.id}/`, access)\r\n        .then((res) => this.refreshList());\r\n    } else {\r\n      window.location = \"/login\";\r\n    }\r\n  };\r\n\r\n  // Create item\r\n  createItem = () => {\r\n    if (this.props.userData.users) {\r\n      const item = {\r\n        message: \"\",\r\n      };\r\n      this.setState({ activeItem: item, modal: !this.state.modal });\r\n    } else {\r\n      window.location = \"/login\";\r\n    }\r\n  };\r\n\r\n  //Edit item\r\n  editItem = (item) => {\r\n    if (this.props.userData.users) {\r\n      this.setState({ activeItem: item, modal: !this.state.modal });\r\n    } else {\r\n      window.location = \"/login\";\r\n    }\r\n  };\r\n\r\n  // -I- Start by visual effects to viewer\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NasaNav comment=\"active\" />\r\n        <br />\r\n        <br />\r\n        <main className=\"content\">\r\n          <h1 className=\"text-black text-uppercase text-center my-4\">\r\n            Comments\r\n          </h1>\r\n          <div className=\"row \">\r\n            <div className=\"card p-3\">\r\n              <div className=\"\">\r\n                <button onClick={this.createItem} className=\"btn btn-primary\">\r\n                  Add Comment\r\n                </button>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                {this.renderItems()}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          {this.state.modal ? (\r\n            <Modal\r\n              activeItem={this.state.activeItem}\r\n              toggle={this.toggle}\r\n              onSave={this.handleSubmit}\r\n            />\r\n          ) : null}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Comments);\r\n"]},"metadata":{},"sourceType":"module"}
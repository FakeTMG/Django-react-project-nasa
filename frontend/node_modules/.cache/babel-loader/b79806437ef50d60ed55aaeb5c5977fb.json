{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mega-PC\\\\Desktop\\\\my-project\\\\frontend\\\\src\\\\components\\\\containers\\\\signup.js\";\nimport React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport { SmileOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n          this.props.history.push(\"/\");\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator(\"userName\", {\n          rules: [{\n            required: true,\n            message: \"Please input your username!\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"user\",\n            style: {\n              color: \"rgba(0,0,0,.25)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator(\"email\", {\n          rules: [{\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          }, {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"mail\",\n            style: {\n              color: \"rgba(0,0,0,.25)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator(\"password\", {\n          rules: [{\n            required: true,\n            message: \"Please input your password!\"\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"lock\",\n            style: {\n              color: \"rgba(0,0,0,.25)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: getFieldDecorator(\"confirm\", {\n          rules: [{\n            required: true,\n            message: \"Please confirm your password!\"\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        })( /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"lock\",\n            style: {\n              color: \"rgba(0,0,0,.25)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 23\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\",\n          onBlur: this.handleConfirmBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            marginRight: \"10px\"\n          },\n          to: \"/login/\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, username, password) => dispatch(actions.authSignup(email, username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/my-project/frontend/src/components/containers/signup.js"],"names":["React","Form","Input","Icon","Button","SmileOutlined","connect","NavLink","actions","FormItem","Item","RegistrationForm","Component","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","history","push","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render","getFieldDecorator","rules","required","message","color","type","validator","marginRight","WrappedRegistrationForm","create","mapStateToProps","loading","error","mapDispatchToProps","dispatch","username","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Icon, Button } from \"antd\";\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/auth\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.props.onAuth(\r\n          values.userName,\r\n          values.email,\r\n          values.password,\r\n          values.confirm\r\n        );\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormItem>\r\n          {getFieldDecorator(\"userName\", {\r\n            rules: [{ required: true, message: \"Please input your username!\" }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Username\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Email\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\",\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\",\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onBlur={this.handleConfirmBlur}\r\n            />\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            Signup\r\n          </Button>\r\n          Or\r\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n            login\r\n          </NavLink>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, username, password) =>\r\n      dispatch(actions.authSignup(email, username, password)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedRegistrationForm);\r\n"]},"metadata":{},"sourceType":"module"}
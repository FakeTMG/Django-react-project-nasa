{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../../..backend/settings\";\nexport const addMessage = message => {\n  return {\n    type: actionTypes.ADD_MESSAGE,\n    message: message\n  };\n};\nexport const setMessages = messages => {\n  return {\n    type: actionTypes.SET_MESSAGES,\n    messages: messages\n  };\n};\n\nconst getUserChatsSuccess = chats => {\n  return {\n    type: actionTypes.GET_CHATS_SUCCESS,\n    chats: chats\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return dispatch => {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`${HOST_URL}/chat/?username=${username}`).then(res => dispatch(getUserChatsSuccess(res.data)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Mega-PC/Desktop/develop/back end/django/my-project/frontend/src/redux/chat/actions/message.js"],"names":["axios","actionTypes","HOST_URL","addMessage","message","type","ADD_MESSAGE","setMessages","messages","SET_MESSAGES","getUserChatsSuccess","chats","GET_CHATS_SUCCESS","getUserChats","username","token","dispatch","defaults","xsrfHeaderName","xsrfCookieName","headers","Authorization","get","then","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAI;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,WADb;AAELF,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,WAAW,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,YADb;AAELD,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID,CALM;;AAOP,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,YAAY,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC/C,SAAOC,QAAQ,IAAI;AACjBhB,IAAAA,KAAK,CAACiB,QAAN,CAAeC,cAAf,GAAgC,aAAhC;AACAlB,IAAAA,KAAK,CAACiB,QAAN,CAAeE,cAAf,GAAgC,WAAhC;AACAnB,IAAAA,KAAK,CAACiB,QAAN,CAAeG,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQN,KAAM;AAFP,KAAzB;AAIAf,IAAAA,KAAK,CACFsB,GADH,CACQ,GAAEpB,QAAS,mBAAkBY,QAAS,EAD9C,EAEGS,IAFH,CAEQC,GAAG,IAAIR,QAAQ,CAACN,mBAAmB,CAACc,GAAG,CAACC,IAAL,CAApB,CAFvB;AAGD,GAVD;AAWD,CAZM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../../..backend/settings\";\n\nexport const addMessage = message => {\n  return {\n    type: actionTypes.ADD_MESSAGE,\n    message: message\n  };\n};\n\nexport const setMessages = messages => {\n  return {\n    type: actionTypes.SET_MESSAGES,\n    messages: messages\n  };\n};\n\nconst getUserChatsSuccess = chats => {\n  return {\n    type: actionTypes.GET_CHATS_SUCCESS,\n    chats: chats\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return dispatch => {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`${HOST_URL}/chat/?username=${username}`)\n      .then(res => dispatch(getUserChatsSuccess(res.data)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}